// Variables para definir el tamaño del grid
$grid-cols: 12;
$grid-gutter-width: 1rem;
$breakpoints: (
    ("mobile","m"),
    ("tablet","t"),
    ("web","w"),
);

// Clase para definir el contenedor principal
.grid {
    max-width: 100%;
    margin: 0 auto;
}

// Clase para definir las renglones del grid
.grid-row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -$grid-gutter-width;
    margin-right: -$grid-gutter-width;
}

// Clase para definir las celdas del grid
.grid-col {
    flex-basis: calc(100% / #{$grid-cols});
    margin-left: $grid-gutter-width;
    margin-right: $grid-gutter-width;
}

.grid-col-start {
    align-self: flex-start;
}

.grid-col-center {
    align-self: center;
}

.grid-col-end {
    align-self: flex-end;
}

// Clases responsivas para definir el tamaño de las celdas
@for $i from 1 through $grid-cols {
    @each $name in $breakpoints {
        :root {
            &[data-device="#{nth($name, 1)}"]
            .grid-col-#{nth($name, 2)}-#{$i} {
                flex-basis: calc((100% / #{$grid-cols}) * #{$i});
            }
        }
    }
}

// Clases para definir el desplazamiento de las celdas
@for $i from 1 through $grid-cols {
    .grid-offset-#{$i} {
        margin-left: calc((100% / #{$grid-cols}) * #{$i});
    }
}

// Clases responsivas para definir el desplazamiento de las celdas
@for $i from 1 through $grid-cols {
    @each $name in $breakpoints {
        :root {
            &[data-device="#{nth($name, 1)}"]
            .grid-offset-#{nth($name, 2)}-#{$i} {
                margin-left: calc((100% / #{$grid-cols}) * #{$i});
            }
        }
    }
}